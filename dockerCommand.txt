docker build -t node-app-image .                                          ->  building image
docker image ls                                                           -> show images
docker image rm < image id >                                              -> delete image
docker run -v ${PWD}:/app:ro -v /app/node_modules --env-file ./.env -p 5000:4000 -d --name node-app node-app-image
-> run the container
docker ps                                                                 -> to see the containers data
docker rm node-app -f                                                     -> kill the container
docker exec -it node-app bash                                             -> log in to my docker container - and take a look at my files in there
docker ps -a                                                              -> show all containers (not just running)
docker logs <container name>                                              -> show container logs
docker volume ls                                                          -> lists all volumes
docker volume prune        ->to delete all the volumes that isn't associated with the running container
you can also delete the associated volumes with a specific container in the command for deleting container:
docker rm node-app -fv
docker-compose up -d        ->run the docker compose file ( -d is the detached flag)
docker-compose down -v --build ->  -v for deleting the volumes and --build to force rebuild of the image
docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d   
docker-compose -f docker-compose.yml -f docker-compose.dev.yml down -v // -v for deleting the extra volumes
docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d  --build // when we change our code in production we need to rebuild the image --build force rebuilding the image
